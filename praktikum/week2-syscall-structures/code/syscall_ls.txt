Hasil Strace ls percobaan saya pada 10 Baris Pertama

execve("/usr/bin/ls", ["ls"], 0x7ffdd6cd5bd0 /* 25 vars */) = 0
brk(NULL)                               = 0x57bd71b49000
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7aa4d17f4000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=17515, ...}) = 0
mmap(NULL, 17515, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7aa4d17ef000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libselinux.so.1", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832

| No | System Call  | Cuplikan dari Output                                                | Fungsi                                                                                                                                                                                                 |                                                                                                            |                                                                                                 |
| -- | ------------ | ------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- |
| 1  | **execve()** | `execve("/usr/bin/ls", ["ls"], 0x7ffdd6cd5bd0 /* 25 vars */) = 0`   | Menjalankan program baru bernama `ls` yang terletak di `/usr/bin/ls`. Ini adalah *entry point* pertama yang menggantikan proses shell dengan proses `ls`.                                              |                                                                                                            |                                                                                                 |
| 2  | **brk()**    | `brk(NULL) = 0x57bd71b49000`                                        | Mengatur awal *heap memory* untuk proses. Heap adalah area memori yang digunakan saat program membutuhkan alokasi dinamis (misalnya malloc).                                                           |                                                                                                            |                                                                                                 |
| 3  | **mmap()**   | `mmap(NULL, 8192, PROT_READ                                         | PROT_WRITE, MAP_PRIVATE                                                                                                                                                                                | MAP_ANONYMOUS, -1, 0)`                                                                                     | Membuat area memori baru di RAM untuk proses. Di sini, digunakan untuk membuat buffer internal. |
| 4  | **access()** | `access("/etc/ld.so.preload", R_OK) = -1 ENOENT`                    | Mengecek apakah file `/etc/ld.so.preload` ada dan dapat dibaca. Karena file ini tidak ditemukan (`ENOENT`), proses tetap lanjut. File ini biasanya berisi daftar library yang harus dimuat lebih awal. |                                                                                                            |                                                                                                 |
| 5  | **openat()** | `openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY                      | O_CLOEXEC) = 3`                                                                                                                                                                                        | Membuka file cache dynamic linker (`ld.so.cache`), yang berisi lokasi pustaka (.so) yang sering digunakan. |                                                                                                 |
| 6  | **fstat()**  | `fstat(3, {st_mode=S_IFREG                                          | 0644, st_size=17515, ...}) = 0`                                                                                                                                                                        | Mengambil informasi file yang baru dibuka (`ld.so.cache`), seperti ukuran dan izin aksesnya.               |                                                                                                 |
| 7  | **mmap()**   | `mmap(NULL, 17515, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7aa4d17ef000`  | Memetakan isi file `ld.so.cache` ke memori agar bisa diakses cepat tanpa membaca file terus-menerus dari disk.                                                                                         |                                                                                                            |                                                                                                 |
| 8  | **close()**  | `close(3) = 0`                                                      | Menutup file descriptor `3` karena isi file `ld.so.cache` sudah tersalin ke memori.                                                                                                                    |                                                                                                            |                                                                                                 |
| 9  | **openat()** | `openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libselinux.so.1", O_RDONLY | O_CLOEXEC) = 3`                                                                                                                                                                                        | Membuka pustaka (library) `libselinux.so.1`, yaitu library keamanan Linux yang dibutuhkan oleh `ls`.       |                                                                                                 |
| 10 | **read()**   | `read(3, "\177ELF\2\1\1\0..." , 832) = 832`                         | Membaca bagian awal (header ELF) dari library `libselinux.so.1` untuk memastikan format file dan metadata-nya benar.                                                                                   |                                                                                                            |                                                                                                 |
